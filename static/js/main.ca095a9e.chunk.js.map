{"version":3,"sources":["firebase.js","components/LinkForm.js","components/Links.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LinkForm","props","initialStateValues","url","name","description","useState","values","setValues","handleInputChange","e","target","value","getLinkById","id","a","collection","doc","get","data","useEffect","currentId","className","onSubmit","preventDefault","addOrEditLink","onChange","type","placeholder","rows","Links","links","setLinks","setCurrentId","linkObject","set","toast","autoClose","update","console","error","onDeleteLink","window","confirm","delete","getLinks","onSnapshot","querySnapshot","docs","forEach","push","map","link","onClick","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca095a9e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAgGy1JI2KnOee_neB9C6l86i31xIcH93E\",\r\n    authDomain: \"fb-crud-react-2c72b.firebaseapp.com\",\r\n    projectId: \"fb-crud-react-2c72b\",\r\n    storageBucket: \"fb-crud-react-2c72b.appspot.com\",\r\n    messagingSenderId: \"1087156674101\",\r\n    appId: \"1:1087156674101:web:2c84f16fa65bb6757fdb7c\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  export const db = fb.firestore();","import React, {useState, useEffect} from 'react'\r\nimport { db } from '../firebase'\r\n\r\nconst LinkForm = (props) => {\r\n\r\n    const initialStateValues = {\r\n        url: '',\r\n        name: '',\r\n        description: ''\r\n    }\r\n\r\n    const [values, setValues] = useState(initialStateValues)\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target\r\n        setValues ({...values, [name] : value})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.addOrEditLink(values)\r\n        setValues({...initialStateValues})\r\n    }\r\n\r\n    const getLinkById = async (id) => {\r\n        const doc = await db.collection('links').doc(id).get()\r\n        setValues({...doc.data()})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.currentId === ''){\r\n            setValues({...initialStateValues});\r\n        } else {\r\n            getLinkById(props.currentId)\r\n        }\r\n    }, [props.currentId])\r\n\r\n    return (\r\n        <form className=\"card card-body\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                <i className=\"material-icons\">insert_link</i>\r\n                </div>\r\n                <input onChange={handleInputChange} type=\"text\" className=\"form-control\" placeholder=\"https://someurl.com\" name=\"url\" value={values.url}/>\r\n            </div>\r\n\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                <i className=\"material-icons\">create</i>\r\n                </div>               \r\n                <input onChange={handleInputChange} type=\"text\" className=\"form-control\" placeholder=\"Website name\" name=\"name\" value={values.name}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea onChange={handleInputChange} rows=\"3\" className=\"form-control\" placeholder=\"Write a description\" name=\"description\" value={values.description}></textarea>\r\n            </div>\r\n\r\n            <button className=\"btn btn-primary btn-block\">\r\n                {props.currentId === '' ? 'Save' : 'Update'}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LinkForm","import React, { useEffect, useState } from 'react'\r\nimport LinkForm from './LinkForm'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport {db} from '../firebase'\r\n\r\nconst Links = () => {\r\n\r\n    const [links, setLinks] = useState([])\r\n\r\n    const [currentId, setCurrentId] = useState('');\r\n\r\n    const addOrEditLink = async (linkObject) => {\r\n        try {\r\n            if(currentId === ''){\r\n                await db.collection('links').doc().set(linkObject)\r\n                toast('New Link Added', {\r\n                    type: 'success',\r\n                    autoClose: 1300\r\n                })\r\n            } else {\r\n                await db.collection('links').doc(currentId).update(linkObject)\r\n                toast('Link Updated', {\r\n                    type: 'info',\r\n                    autoClose: 1300\r\n                })\r\n                setCurrentId('')\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n\r\n    }\r\n\r\n    const onDeleteLink = async (id) => {\r\n        if (window.confirm('are you sure?')){\r\n            await db.collection('links').doc(id).delete()\r\n            toast('Link Removed Successfully', {\r\n                type: 'error',\r\n                autoClose: 1500\r\n            })\r\n        }\r\n    }\r\n\r\n    const getLinks = async () => {\r\n        db.collection('links').onSnapshot((querySnapshot) => {\r\n            const docs = []\r\n            querySnapshot.forEach( doc => {\r\n                docs.push({...doc.data(), id:doc.id})\r\n            })      \r\n            setLinks(docs)      \r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLinks()\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <div className=\"col-12\">\r\n            <div className=\"col-md-4 p-2 mx-auto\">\r\n                <LinkForm {...{addOrEditLink, currentId, links}} />\r\n            </div>\r\n            <div className=\"col-md-8 p-2 mx-auto\">\r\n                {links.map(link => (\r\n                    <div className=\"card mb-1\" key={link.id}>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <h4>{link.name}</h4>\r\n                                <div>\r\n                                    <i className=\"material-icons\" onClick={() => setCurrentId(link.id)}>create</i>\r\n                                    <i className=\"material-icons text-danger\" onClick={() => onDeleteLink(link.id)}>close</i>\r\n                                </div>\r\n                            </div>\r\n                            <p>{link.description}</p>\r\n                            <a href=\"{link.url}\" target=\"_blank\" rel=\"noopener noreferrer\">Go to web Site</a>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Links","import Links from './components/Links'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nfunction App() {\n  return (\n    <div className=\"container p-4\">\n      <div className=\"row\">\n        <Links />\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './firebase'\nimport 'bootswatch/dist/superhero/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}